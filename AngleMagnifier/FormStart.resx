<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUWC3w4Oh3yKSoV6AAAAAYAAAAAAAAAAAAA
        AAAAAAAAHBgNgD40HvI3LRryAAAAMAAAAAAAAAAAIBcOjEMvH/I5JxryAAAAJAAAAAAAAAAAAAAAACkY
        Eq5HKR/ySCgf8kknH/JJJh/ySiYf8kkkH+o8HBq2DQYGQgAAAAAAAAAADQ4HYFNYLP9HSSX/AAAAKgAA
        AAAAAAAAAAAAAAAAAAAxKxiyXVAu/0Y6IvwAAAASAAAAAAAAAAAuIhWYZEku/1Y9J/8AAAAqAAAAAAAA
        AAAAAAAAPCQbvGtAMP9sPjD/bT0w/248MP9vOjD/cDkw/3E4MP9gLin8HQ4MaAAAAAAAAAA0SlEo/1RZ
        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
        LqRWYi+iWGEwomlxOM6ts1v/vr9j/5CNSvYAAAAgAAAAAAAAAAAAAAAAAAAAAD2HMLpw8lj/c/BY/xs4
        FWwAAAAAAAAAAAAAACZtvkr/h+Ra/4rhXP+N31z/kN1c/5PbXf+W2V3/mddd/5zVXf9XdTO2W3U1vKTO
        Xv+nzF7/qcle/6zHX/+vxWD/ssNg/7TAYP+Wm0/6LS4XYAAAAAAAAAAAAAAAAAAAAAAAAAAAH0kafkKW
        NuZBjjPkAgQBOAAAAAAAAAAAAAAAHkF2LeRRjTfmU4w35lSKOOZWiTjmWIg45lqHOOZchTjmXoQ55jZL
        IJ45SyGkY4A55mV/OeZmfTnmaHw65mp6O+ZpdjncVV0uqg8RCDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////58ceAefHHgDnxx4AZ8cePGPHHj4gDx4+IA8
        ePjAPHj4zjx4+M48ePjGPHj4xnx4+OZ8ePjkfHj45Hx4+OR8ePjg/Hj44Px4+PD8ePjw/Hj48Px48fDg
        CAHx4AAD+eAAB/////////////////////8=
</value>
  </data>
</root>